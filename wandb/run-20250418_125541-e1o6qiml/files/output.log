Traceback (most recent call last):
  File "/Users/rudra_sarkar/Documents/PhD IIT Madras/Intro to Deep Learning M Khapra DA6401/da6401 assignment 2/train.py", line 27, in train
    x_train, y_train = next(iter(train_dl))
                       ^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 631, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1346, in _next_data
    return self._process_data(data)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/utils/data/dataloader.py", line 1372, in _process_data
    data.reraise()
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/_utils.py", line 722, in reraise
    raise exception
TypeError: Caught TypeError in DataLoader worker process 0.
Original Traceback (most recent call last):
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/utils/data/_utils/worker.py", line 308, in _worker_loop
    data = fetcher.fetch(index)
           ^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/utils/data/_utils/fetch.py", line 51, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
            ~~~~~~~~~~~~^^^^^
  File "/Users/rudra_sarkar/Documents/PhD IIT Madras/Intro to Deep Learning M Khapra DA6401/da6401 assignment 2/data.py", line 76, in __getitem__
    self.cache[index] = self.dataset[index]
                        ~~~~~~~~~~~~^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/utils/data/dataset.py", line 335, in __getitem__
    return self.datasets[dataset_idx][sample_idx]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/utils/data/dataset.py", line 391, in __getitem__
    return self.dataset[self.indices[idx]]
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torchvision/datasets/folder.py", line 231, in __getitem__
    sample = self.transform(sample)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torchvision/transforms/transforms.py", line 95, in __call__
    img = t(img)
          ^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torchvision/transforms/autoaugment.py", line 279, in forward
    img = _apply_op(img, op_name, magnitude, interpolation=self.interpolation, fill=fill)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torchvision/transforms/autoaugment.py", line 83, in _apply_op
    img = F.equalize(img)
          ^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torchvision/transforms/functional.py", line 1498, in equalize
    return F_t.equalize(img)
           ^^^^^^^^^^^^^^^^^
  File "/opt/anaconda3/envs/nlp_env/lib/python3.12/site-packages/torchvision/transforms/_functional_tensor.py", line 893, in equalize
    raise TypeError(f"Only torch.uint8 image tensors are supported, but found {img.dtype}")
TypeError: Only torch.uint8 image tensors are supported, but found torch.float32
